{"version":3,"sources":["components/Header.js","components/About.js","components/Contact.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","this","props","data","id","className","href","title","Component","About","Contact","action","method","name","htmlFor","type","defaultValue","size","onChange","handleChange","cols","rows","alt","src","Footer","Date","getFullYear","version","App","ReactGA","initialize","pageview","window","location","pathname","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f23cedd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    if(this.props.data){\n       \n    }\n\n    return (\n      <header id=\"home\">\n      <nav id=\"nav-wrap\">\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\"><code>Home</code></a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\"><code>About</code></a></li>\n\t         <li><a className=\"smoothscroll\" href=\"#contact\"><code>Contact</code></a></li>\n         </ul>\n\n      </nav>\n\n      <div className=\"row banner\">\n         <div className=\"banner-text\">\n            <h3><code>{\"<\"} dalton wais {\">\"}</code></h3>\n            <hr />\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  \n  render() {\n\n    // if(this.props.data){\n    //   var bio = this.props.data.bio;\n    // }\n\n    return (\n      <section id=\"about\">\n      <div className=\"row\">\n         <div className=\"twelve columns main-col\">\n            <h2>A word about this site.</h2>\n            <p>this is the about section</p>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n\n    return (\n      <section id=\"contact\">\n\n         <div className=\"row section-head\">\n\n            <div className=\"ten columns\">\n\n                  <p className=\"lead\"><code>I am available for consultation and freelance development services. <br/> Drop me a note and let's talk!</code></p>\n\n            </div>\n\n         </div>\n\n         <div className=\"row\">\n            <div className=\"ten columns\">\n\n               <form action=\"\" method=\"post\" id=\"contactForm\" name=\"contactForm\">\n\t\t\t\t\t<fieldset>\n\n                  <div>\n\t\t\t\t\t\t   <label htmlFor=\"contactName\">Name <span className=\"required\">*</span></label>\n\t\t\t\t\t\t   <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactName\" name=\"contactName\" onChange={this.handleChange}/>\n                  </div>\n\n                  <div>\n\t\t\t\t\t\t   <label htmlFor=\"contactEmail\">Email <span className=\"required\">*</span></label>\n\t\t\t\t\t\t   <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactEmail\" name=\"contactEmail\" onChange={this.handleChange}/>\n                  </div>\n\n                  <div>\n\t\t\t\t\t\t   <label htmlFor=\"contactSubject\">Subject</label>\n\t\t\t\t\t\t   <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactSubject\" name=\"contactSubject\" onChange={this.handleChange}/>\n                  </div>\n\n                  <div>\n                     <label htmlFor=\"contactMessage\">Message <span className=\"required\">*</span></label>\n                     <textarea cols=\"50\" rows=\"15\" id=\"contactMessage\" name=\"contactMessage\"></textarea>\n                  </div>\n\n                  <div>\n                     <button className=\"submit\">Submit</button>\n                     <span id=\"image-loader\">\n                        <img alt=\"\" src=\"images/loader.gif\" />\n                     </span>\n                  </div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t   </form>\n\n           <div id=\"message-warning\"> Error boy</div>\n\t\t\t\t   <div id=\"message-success\">\n                  <i className=\"fa fa-check\"></i>Your message was sent, thank you!<br />\n\t\t\t\t   </div>\n           </div>\n\n\n            <aside className=\"four columns footer-widgets\">\n              <div className=\"widget widget_contact\">\n\t\t          </div>\n            </aside>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport { version } from '../../package.json';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n\n     <div className=\"row\">\n        <div className=\"twelve columns\">\n           <ul className=\"social-links\">\n              {/* {networks} */}\n           </ul>\n\n           <ul className=\"copyright\">\n              <li>&copy; Copyright { new Date().getFullYear() } Dalton Wais | v {version}</li>\n              <li>source code availible on <a title=\"Styleshout\" href=\"https://github.com/gdwais/daltonwais\">github</a></li>\n           </ul>\n\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n     </div>\n  </footer>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <About />\n        <Contact />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}