{"version":3,"sources":["markdown sync /^/.*/.md$","markdown/about.md","markdown/contact.md","markdown/this_site.md","components/Header.js","components/Content.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Header","className","href","title","key","Component","Content","props","state","name","markdown","markdownPath","require","this","fetch","response","text","setState","source","Footer","Date","getFullYear","version","App","ReactGA","initialize","pageview","window","location","pathname","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.965ed474.chunk.js","sourcesContent":["var map = {\n\t\"./about.md\": 123,\n\t\"./contact.md\": 124,\n\t\"./this_site.md\": 125\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 122;","module.exports = __webpack_public_path__ + \"static/media/about.4f51810c.md\";","module.exports = __webpack_public_path__ + \"static/media/contact.f42b4b0b.md\";","module.exports = __webpack_public_path__ + \"static/media/this_site.b795d6bf.md\";","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <header id=\"home\">\r\n      <nav id=\"nav-wrap\">\r\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\r\n\r\n         <ul id=\"nav\" className=\"nav\">\r\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\"><code>Home</code></a></li>\r\n            <li><a className=\"smoothscroll\" href=\"#about\"><code>About</code></a></li>\r\n\t         <li><a className=\"smoothscroll\" href=\"#contact\"><code>Contact</code></a></li>\r\n         </ul>\r\n\r\n      </nav>\r\n\r\n      <div className=\"row banner\">\r\n         <div className=\"banner-text\">\r\n            <h1>Dalton Wais</h1>\r\n            <h4><code>\r\n               Colorado based developer<br/>\r\n               technology consultant<br/>\r\n               curious human<br/>\r\n            </code></h4>\r\n            <ul className=\"social\">\r\n               <li key=\"linkedin\"><a href=\"https://www.linkedin.com/in/daltonwais\"><i className=\"fa fa-linkedin\"></i></a></li>\r\n               <li key=\"github\"><a href=\"https://github.com/gdwais/daltonwais\"><i className=\"fa fa-github\"></i></a></li>\r\n            </ul>\r\n         </div>\r\n      </div>\r\n\r\n   </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nclass Content extends Component {\r\n  \r\nconstructor(props) {\r\n  super(props);\r\n  this.state = { \r\n    name: this.props.name, \r\n    markdown: null }\r\n}\r\n\r\n  async componentDidMount() {\r\n    const markdownPath = require(`../markdown/${this.state.name}.md`);\r\n    const response = await fetch(markdownPath);\r\n    let text = await response.text();\r\n    this.setState({\r\n      markdown: text\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { markdown } = this.state;\r\n\r\n    return (\r\n      <section id={this.state.name}>\r\n      <div className=\"row\">\r\n         <div className=\"twelve columns main-col\">\r\n           \r\n      <div className=\"row banner\">\r\n         <div className=\"banner-text\">\r\n          <ReactMarkdown source={markdown} />\r\n         </div>\r\n      </div>\r\n            \r\n         </div>\r\n      </div>\r\n   </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport { version } from '../../package.json';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n\r\n     <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n           <ul className=\"social-links\">\r\n              {/* {networks} */}\r\n           </ul>\r\n\r\n           <ul className=\"copyright\">\r\n              <li>&copy; Copyright { new Date().getFullYear() } Dalton Wais | v {version}</li>\r\n              <li>source code availible on <a title=\"Styleshout\" href=\"https://github.com/gdwais/daltonwais\">github</a></li>\r\n           </ul>\r\n\r\n        </div>\r\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\r\n     </div>\r\n  </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport Header from './components/Header';\r\nimport Content from './components/Content';\r\nimport Footer from './components/Footer';\r\n\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    ReactGA.initialize('UA-110570651-1');\r\n    ReactGA.pageview(window.location.pathname);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Content name=\"about\" />\r\n        <Content name=\"contact\"/>\r\n        <Content name=\"this_site\"/>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}